<Window x:Class="ColoritWPF.Views.Products.ProductsSelectorView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        SizeToContent="WidthAndHeight"
        Title="Подбор продуктов" Height="750" Width="700">
    <Grid DataContext="{Binding ProductsSelectorViewModelPage, Source={StaticResource Locator}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <StackPanel Style="{StaticResource LabelAndTextHorizontal}" HorizontalAlignment="Left">
            <StackPanel Style="{StaticResource LabelAndTextHorizontal}">
            <Label Style="{StaticResource LabelForTextBox}">Поиск:</Label>
            <TextBox Text="{Binding SearchCriteria, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Style="{StaticResource LongTextBox}"/>
                <CheckBox Content="В наличии" IsChecked="{Binding InStock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Style="{StaticResource CheckBoxes}" Grid.Row="0" />
        </StackPanel>

        <StackPanel Style="{StaticResource LabelAndTextHorizontal}">
            <Label Style="{StaticResource LabelForTextBox}">Группировать по:</Label>
            <ComboBox x:Name="GroupComboBox"
            ItemsSource ="{Binding GroupingList}"  
            DisplayMemberPath="Name"
            SelectedValuePath="Value"
            SelectedValue ="{Binding Path=SelectedGroup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
            Style="{StaticResource LongComboBox}" IsEditable="False" />
        </StackPanel>
        </StackPanel>
        <DataGrid AutoGenerateColumns="False" EnableRowVirtualization="True" Height="300" Style="{StaticResource DataGridStyle}"
                                  ItemsSource="{Binding Path=ProductsView}" CanUserAddRows="False"
                                  SelectedItem="{Binding SelectedProduct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Grid.Row="1" LoadingRow="dg_LoadingRow">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding AddProductToListCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{Binding AddProductToListCommand}" Header="Добавить в список" />
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <TextBlock Text="{Binding Name}" FontWeight="Bold" Padding="3"/>
                                </StackPanel>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <Expander IsExpanded="True" Background="GhostWhite" Foreground="Black">
                                                <Expander.Header>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text="{Binding Name}"/>
                                                        <TextBlock Text="{Binding Path=ItemCount}" Margin="8,0,4,0"/>
                                                        <TextBlock Text="(шт)"/>
                                                    </StackPanel>
                                                </Expander.Header>
                                                <ItemsPresenter />
                                            </Expander>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </DataGrid.GroupStyle>
            <DataGrid.RowHeaderTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}, Path=Header}"></TextBlock>
                </DataTemplate>
            </DataGrid.RowHeaderTemplate>
            <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Path=Article}" Header="Артикль" Width="SizeToHeader" IsReadOnly="True" />
                    <DataGridTextColumn Binding="{Binding Path=Name}" Header="Наименование" Width="380" IsReadOnly="True" />
                    <DataGridTextColumn Binding="{Binding Path=Storage}" Header="Магазин" Width="SizeToHeader" IsReadOnly="True" />
                    <DataGridTextColumn Binding="{Binding Path=Warehouse}" Header="Склад" Width="SizeToHeader" IsReadOnly="True" />
                    <DataGridTextColumn Binding="{Binding Path=Cost}" Header="Цена" Width="Auto" IsReadOnly="True" />
                </DataGrid.Columns>
            </DataGrid>
        
        <!--Таблица уже выбраных продуктов-->
        <DataGrid AutoGenerateColumns="False" EnableRowVirtualization="True" Height="300" Style="{StaticResource DataGridStyle}"
                                  ItemsSource="{Binding Path=SelectedProducts}" CanUserAddRows="False"
                                  SelectedItem="{Binding RemoveSelectedProduct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Grid.Row="2" LoadingRow="dg_LoadingRow">
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{Binding RemoveProductFromListCommand}" Header="Удалить из списка" />
                    </ContextMenu>
                </DataGrid.ContextMenu>
            <DataGrid.RowHeaderTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}, Path=Header}"></TextBlock>
                </DataTemplate>
            </DataGrid.RowHeaderTemplate>
            <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Path=Article}" Header="Артикль" Width="SizeToHeader" IsReadOnly="True" />
                    <DataGridTextColumn Binding="{Binding Path=Name}" Header="Наименование" Width="540" IsReadOnly="True" />
                    <DataGridTextColumn Binding="{Binding Path=Amount}" Header="Кол-во" Width="65" />
                    <DataGridTextColumn Binding="{Binding Path=Cost}" Header="Цена" Width="Auto" IsReadOnly="True" />
            </DataGrid.Columns>
        </DataGrid>
        
        <StackPanel Grid.Row="3" Style="{StaticResource BottomButtonsStackPanel}">
            <Button Content="Готово" Command="{Binding SendProductsListCommand}" Style="{StaticResource Buttons}" />
            <Button Content="Отмена" Click="Button_Click" Style="{StaticResource Buttons}" />
        </StackPanel>
    </Grid>
</Window>
